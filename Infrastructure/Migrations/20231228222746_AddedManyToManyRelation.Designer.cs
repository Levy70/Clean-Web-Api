// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MySqlDatabase))]
    [Migration("20231228222746_AddedManyToManyRelation")]
    partial class AddedManyToManyRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.ToTable("UserAnimal");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a38ac62-882d-4839-99c5-970fffe528a0"),
                            Name = "Parrot",
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("50ff375b-c52d-4663-94cd-0dfece57b26e"),
                            Name = "Cortex",
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("928cb498-3337-48bb-a5d5-555dabb5c9d5"),
                            Name = "Fench",
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("94fad6dd-373f-4058-b929-fab011f9e1af"),
                            Name = "Feri",
                            CanFly = false,
                            Color = ""
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd76df70-85c4-450b-9d50-6eb7d0fb3e8f"),
                            Name = "Nuno",
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("026edd7f-51ae-471b-b128-6a966664e8e3"),
                            Name = "Mani",
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("c122fef4-f941-4a18-8207-8f3ca57ed110"),
                            Name = "Puppy",
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("5aba6e01-db1c-4238-85e4-0869b9395b41"),
                            Name = "Shima",
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("AnimalModel", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c9a41e6-ac45-49c1-8123-d5b7e816e57a"),
                            Name = "Sedel",
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("049473db-e101-40b6-8a67-7c2e7c37647e"),
                            Name = "Tom",
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("5b0e61e7-3ba4-4443-80f6-81953df95392"),
                            Name = "Misha",
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("2da074b9-d882-4360-8d45-a7e7ce6d4f46"),
                            Name = "Tezar",
                            Breed = "",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
