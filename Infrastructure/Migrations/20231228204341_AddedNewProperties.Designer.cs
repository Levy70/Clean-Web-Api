// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MySqlDatabase))]
    [Migration("20231228204341_AddedNewProperties")]
    partial class AddedNewProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAnimal");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("315bb005-5d7c-48db-8178-7d1ad3a41d05"),
                            Name = "Parrot",
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("8cfc02d3-6cc7-45fb-8616-0e5c5f9151ad"),
                            Name = "Cortex",
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("5aae6ac2-1814-4797-9792-e63a59e5b7d3"),
                            Name = "Fench",
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("8ef28e95-338c-4d34-9e30-87e6216983df"),
                            Name = "Feri",
                            CanFly = false,
                            Color = ""
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("413eca91-1b84-4399-9408-660af4482da0"),
                            Name = "Nuno",
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("fb01054a-90b1-4dc8-897f-3bdf50b05170"),
                            Name = "Mani",
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("af2d258d-5fda-4155-9fd7-5a391bd605aa"),
                            Name = "Puppy",
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("c9314b2c-7951-4df7-96b1-28132a7c7e6c"),
                            Name = "Shima",
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("AnimalModel", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("047353a2-1fee-4ca4-847b-88e6a6674b2e"),
                            Name = "Sedel",
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("41e81086-0476-4d59-944c-5a513532e523"),
                            Name = "Tom",
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("2217ecca-300d-493a-8706-6aafa2598680"),
                            Name = "Misha",
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("f480fb3d-a8e4-4917-85a6-2cfc912dc946"),
                            Name = "Tezar",
                            Breed = "",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
