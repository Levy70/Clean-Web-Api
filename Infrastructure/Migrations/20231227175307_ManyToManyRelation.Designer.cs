// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MySqlDatabase))]
    [Migration("20231227175307_ManyToManyRelation")]
    partial class ManyToManyRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAnimal");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8e4262d-80b7-410f-ab31-7a991507fd09"),
                            Name = "Parrot",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("db9a8ba2-ef9c-4c7b-82e2-188a70e2f71f"),
                            Name = "Cortex",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("346d327b-b5bb-4a34-95f1-1fb65db5a409"),
                            Name = "Fench",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CanFly = false,
                            Color = ""
                        },
                        new
                        {
                            Id = new Guid("0e139174-f5ae-4bad-b7ba-3371ecb6abad"),
                            Name = "Feri",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CanFly = false,
                            Color = ""
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("972fe673-9d89-4f25-b912-ef316e5d95b0"),
                            Name = "Nuno",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("05ca33ed-be2e-4bd1-8267-ca020927a18a"),
                            Name = "Mani",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("c7a2c6cc-fca7-4afa-a13d-1b451de3f0eb"),
                            Name = "Puppy",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("ba99ab42-509e-47ae-846e-2cd90b95c829"),
                            Name = "Shima",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Breed = "",
                            LikesToPlay = false,
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("AnimalModel", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1797cfc-980a-4e59-b387-7269652e94fa"),
                            Name = "",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("6b5e96f3-5e92-4f45-bc60-463329b79cf1"),
                            Name = "",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("75df04b6-3029-4331-93a0-a257a12b8736"),
                            Name = "",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Breed = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("02891b7b-fe65-46c8-b5ec-1521926510bf"),
                            Name = "",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Breed = "",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
